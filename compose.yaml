version: "3"

x-spindle-base: &spindle-base
    image: spindle
    restart: always
    build:
        context: ../spindle-server
        args:
            - SPINDLE_PORT=${SPINDLE_PORT}
    expose:
        - ${SPINDLE_PORT}

x-latex-base: &latex-base
    image: latex-service
    restart: always
    build:
        context: ../latex-service
        args:
            - LATEX_PORT=${LATEX_PORT}
    expose:
        - ${LATEX_PORT}

services:
    nginx:
        container_name: nginx
        image: nginx:latest
        volumes: 
            - ./nginx.conf:/etc/nginx/nginx.conf
        ports:
            - "5000:80"

    ng-dev:
        image: ng-dev
        container_name: parseport-ng
        profiles: ["dev"]
        build:
            context: ./frontend
            dockerfile: Dockerfile.dev
        command: ng serve --host 0.0.0.0 --poll 200 --disable-host-check
        expose:
            - "4200"
        volumes:
            - ./frontend:/app
    
    ng-prod:
        image: ng-prod
        container_name: parseport-ng
        profiles: ["prod"]
        build:
            context: ./frontend
            dockerfile: Dockerfile.prod
        ports:
            - "4200"

    dj-dev:
        image: dj-dev
        container_name: parseport-dj
        profiles: ["dev"]
        build: backend
        env_file: .env
        command: python manage.py runserver 0.0.0.0:8000
        expose:
            - "8000"
        volumes:
            - ./backend:/src

    dj-prod:
        image: dj-prod
        container_name: parseport-dj
        profiles: ["prod"]
        build: backend
        env_file: .env
        command: gunicorn -b 0.0.0.0:8000 wsgi:application --pythonpath=parseport
        expose:
            - "8000"
        volumes:
            - ./backend:/src

    spindle-dev:
        <<: *spindle-base
        container_name: parseport-spindle
        profiles: ["dev"]
        command: flask run --host=0.0.0.0

    spindle-prod:
        <<: *spindle-base
        container_name: parseport-spindle
        profiles: ["prod"]
        command: gunicorn -w 4 -b 0.0.0.0 'app:app' --timeout 600

    latex-dev:
        <<: *latex-base
        container_name: parseport-latex
        profiles: ["dev"]
        command: flask run --host=0.0.0.0

    latex-prod:
        <<: *latex-base
        container_name: parseport-latex
        profiles: ["prod"]
        command: gunicorn -w 4 -b 0.0.0.0 'app:app'

networks:
    parseport:
        driver: bridge
